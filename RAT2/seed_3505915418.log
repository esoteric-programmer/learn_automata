Random target AFA:
digraph finite_state_machine {
	rankdir=LR;
	node [shape = circle];
	s0 [shape = point, style = invis, start="true" ];
	s1 [shape = point, style = invis, start="true" ];
	q0 [label = "q0"];
	q1 [label = "q1", shape = doublecircle, final="true" ];
	q2 [label = "q2"];
	q3 [label = "q3", shape = doublecircle, final="true" ];
	q4 [label = "q4", shape = doublecircle, final="true" ];
	q5 [label = "q5", shape = doublecircle, final="true" ];
	m0 [label = "", shape = square, style = filled, color=grey, fixedsize=true, width=.2];
	m1 [label = "", shape = square, style = filled, color=grey, fixedsize=true, width=.2];
	m2 [label = "", shape = square, style = filled, color=grey, fixedsize=true, width=.2];
	m3 [label = "", shape = square, style = filled, color=grey, fixedsize=true, width=.2];
	m4 [label = "", shape = square, style = filled, color=grey, fixedsize=true, width=.2];
	m5 [label = "", shape = square, style = filled, color=grey, fixedsize=true, width=.2];
	m6 [label = "", shape = square, style = filled, color=grey, fixedsize=true, width=.2];
	m7 [label = "", shape = square, style = filled, color=grey, fixedsize=true, width=.2];
	m8 [label = "", shape = square, style = filled, color=grey, fixedsize=true, width=.2];
	s0 -> q0
	s1 -> q2
	q3 -> q4 [label = "c"];
	q2 -> m7 [label = "c"];
	q2 -> q0 [label = "c"];
	q3 -> q2 [label = "c"];
	q5 -> q3 [label = "a"];
	q1 -> m6 [label = "b"];
	q3 -> q5 [label = "a, b"];
	q3 -> q3 [label = "a"];
	q1 -> m5 [label = "a"];
	q5 -> q1 [label = "b"];
	q1 -> q4 [label = "a, c"];
	q4 -> q4 [label = "c"];
	q2 -> m1 [label = "b"];
	q0 -> m2 [label = "b"];
	q0 -> q4 [label = "a"];
	q0 -> m0 [label = "a"];
	q1 -> m7 [label = "c"];
	q3 -> q0 [label = "b"];
	q4 -> m5 [label = "a"];
	q0 -> q3 [label = "b, c"];
	q2 -> m3 [label = "a"];
	q4 -> m8 [label = "b"];
	q5 -> m0 [label = "a"];
	q5 -> q4 [label = "c"];
	q1 -> q0 [label = "b"];
	q4 -> q2 [label = "a, b, c"];
	q0 -> m4 [label = "c"];
	q2 -> q2 [label = "a, b"];
	q5 -> q0 [label = "b, c"];
	m0 -> q2;
	m0 -> q4;
	m1 -> q3;
	m1 -> q5;
	m2 -> q1;
	m2 -> q3;
	m3 -> q3;
	m3 -> q4;
	m4 -> q0;
	m4 -> q1;
	m5 -> q1;
	m5 -> q5;
	m6 -> q1;
	m6 -> q2;
	m7 -> q1;
	m7 -> q4;
	m8 -> q2;
	m8 -> q5;
}

L* output after 1 EQ and 8 MQ:
digraph finite_state_machine {
	rankdir=LR;
	node [shape = circle];
	s0 [shape = point, style = invis, start="true" ];
	q0 [label = "q0", shape = doublecircle, final="true" ];
	q1 [label = "q1"];
	s0 -> q1
	q0 -> q0 [label = "a, b, c"];
	q1 -> q0 [label = "a, b, c"];
}
DFA size: 2 states

NL* output after 2 EQ and 16 MQ:
digraph finite_state_machine {
	rankdir=LR;
	node [shape = circle];
	s0 [shape = point, style = invis, start="true" ];
	q0 [label = "q0", shape = doublecircle, final="true" ];
	q1 [label = "q1"];
	s0 -> q1
	q0 -> q1 [label = "a, b, c"];
	q0 -> q0 [label = "a, b, c"];
	q1 -> q1 [label = "a, b, c"];
	q1 -> q0 [label = "a, b, c"];
}
NFA size: 2 states

AL* output after 2 EQ and 9 MQ:
digraph finite_state_machine {
	rankdir=LR;
	node [shape = circle];
	s0 [shape = point, style = invis, start="true" ];
	q0 [label = "q0"];
	m0 [label = "", shape = square, style = filled, color=grey, fixedsize=true, width=.2];
	s0 -> q0
	q0 -> m0 [label = "a, b, c"];
}
AFA size: 1 state

AL** output after 3 EQ and 9 MQ:
digraph finite_state_machine {
	rankdir=LR;
	node [shape = circle];
	s0 [shape = point, style = invis, start="true" ];
	q0 [label = "q0"];
	m0 [label = "", shape = square, style = filled, color=grey, fixedsize=true, width=.2];
	s0 -> q0
	q0 -> m0 [label = "a, b, c"];
}
RAFA size: 1 state

